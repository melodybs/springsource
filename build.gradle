buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:1.9.0'
        classpath 'com.eriwen:gradle-css-plugin:1.8.0'
    }
}
buildscript {
    configurations.classpath.resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply plugin: "war"
apply plugin: "java"
apply plugin: "eclipse-wtp"
apply plugin: "idea"
apply plugin: 'js'
apply plugin: 'css'

ext.springVersion = "4.0.3.RELEASE"
ext.tilesVersion = "3.0.3"
ext.springSecurityVersion = "3.2.3.RELEASE"
ext.springSwfVersion = "2.3.3.RELEASE"
ext.hibernateVersion = "4.3.5.Final"
ext.hibernateValidatorVersion = "5.1.0.Final"
ext.ehCacheVersion = "2.8.1"
ext.springSocialVersion = "1.1.0.RC1"
ext.springSocialFacebookVersion = "1.1.0.RC1"
ext.springSocialTwitterVersion = "1.1.0.RC1"

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = "1.0.0"

description = "Springsource Translation Project"
group = "springsource"


javascript.source {
    dev {
        js {
            srcDir "src/main/resources/META-INF/web-resources/script"
            include "**/*.js"
            exclude "**/*.min.js"
        }
    }
    prod {
        js {
            srcDir "src/main/resources/META-INF/web-resources/script"
            include "**/*.min.js"
        }
    }
}

css.source {
    dev {
        css {
            srcDir "src/main/resources/META-INF/web-resources/css"
            include "**/*.css"
            exclude "**/*.min.css"
        }
    }
    prod {
        css {
            srcDir "src/main/resources/META-INF/web-resources/css"
            include "**/*.min.css"
        }
    }
}

repositories {
    maven {
    	url "http://repo.springsource.org/plugins-release/"
    }
}

/*Default---------------------------------------------------------------------*/
dependencies {
	compile "org.apache.tiles:tiles-servlet:$tilesVersion"
    compile "org.apache.tiles:tiles-jsp:$tilesVersion"
    compile "org.apache.tiles:tiles-api:$tilesVersion"
    compile "org.apache.tiles:tiles-core:$tilesVersion"
    
    runtime "jstl:jstl:1.2"
    providedCompile "javax.servlet:javax.servlet-api:3.1.0"
    
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-oxm:$springVersion"
    compile "org.springframework.webflow:spring-webflow:$springSwfVersion"
    compile "org.springframework.webflow:spring-js:$springSwfVersion"
	compile "org.springframework.webflow:spring-binding:$springSwfVersion"
	compile "org.springframework.security:spring-security-core:$springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"
    compile "org.springframework.security:spring-security-openid:$springSecurityVersion"    

    compile "org.hibernate:hibernate-core:4.2.4.Final"
    compile "org.hibernate:hibernate-entitymanager:4.2.4.Final"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    //compile "org.hibernate:hibernate-ehcache:$hibernateVersion"
    //compile "net.sf.ehcache:ehcache-core:$ehCacheVersion"

    compile "org.eclipse.persistence:javax.persistence:2.1.0"
    compile "org.apache.commons:commons-lang3:3.2.1"
    compile "mysql:mysql-connector-java:5.1.29"
    compile "org.javassist:javassist:3.18.1-GA"
    compile "org.apache.tomcat:tomcat-dbcp:7.0.52"
    compile "commons-io:commons-io:2.4"
    compile "org.codehaus.jackson:jackson-core-asl:1.9.13"
    compile "org.codehaus.jackson:jackson-mapper-asl:1.9.13"
    compile "com.google.code.gson:gson:2.2.4"
    compile "javax.validation:validation-api:1.1.0.Final"
    compile "org.slf4j:slf4j-log4j12:1.7.7"
	compile "log4j:log4j:1.2.17"
    compile "org.slf4j:jcl-over-slf4j:1.7.7"
    
    compile "org.springframework.social:spring-social-core:$springSocialVersion"
    compile "org.springframework.social:spring-social-web:$springSocialVersion"
    compile "org.springframework.social:spring-social-config:$springSocialVersion"
    compile "org.springframework.social:spring-social-security:$springSocialVersion"
    compile "org.springframework.social:spring-social-facebook:$springSocialFacebookVersion"
    compile "org.springframework.social:spring-social-facebook-web:$springSocialFacebookVersion"
    compile "org.springframework.social:spring-social-twitter:$springSocialTwitterVersion"
    compile "org.apache.httpcomponents:httpclient:4.3.1"
    
    testCompile "junit:junit:4.11"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.mockito:mockito-all:1.9.5"
    //testCompile "org.hamcrest.hamcrest-all:1.3"
    //testCompile "org.springframework:spring-test-mvc:1.0.0.BUILD-SNAPSHOT"
    testCompile "com.h2database:h2:1.3.175"
    testCompile "org.hamcrest:hamcrest-library:1.3"
}

eclipse { 
	project.natures "org.springframework.ide.eclipse.core.springnature" 
}

buildDir = "build"

tasks.withType(Compile) {
    options.encoding = "UTF-8"
}

/* Archive--------------------------------------------------------------------*/
war {
    doFirst {
        manifest {
            attributes("Implementation-Title": project.name, "Implementation-Version": version, "Implementation-Timestamp": new Date())
        }
    }
    archiveName "ROOT.war"
}

/* JS-------------------------------------------------------------------------*/
javascript.source.dev.js.files.eachWithIndex { jsFile, idx ->
    tasks.add(name: "dominifyJs${idx}", type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
        source = jsFile
        dest = "${jsFile.parent}/${jsFile.name.replace('.js', '.min.js')}"
        closure {
        	warningLevel = 'QUIET'
    	}
    }
}
task individualMinifyJs(dependsOn: tasks.matching { Task task -> task.name.startsWith("dominifyJs")})

javascript.source.prod.js.files.eachWithIndex { jsFile, idx ->
    tasks.add(name: "doGzipJs${idx}", type: com.eriwen.gradle.js.tasks.GzipJsTask) {
        source = jsFile
        dest = "${jsFile.parent}/${jsFile.name}"
    }
}
task individualGzipJs(dependsOn: tasks.matching { Task task -> task.name.startsWith("doGzipJs")})

jshint {
    source = javascript.source.dev.js.files
    dest = "src/main/resources/META-INF/web-resources/script/jshint.out"
    ignoreExitCode = true
    reporter = 'checkstyle'
    jshint.options = [expr: "true", unused: "true"]
    jshint.predef = ["exports": 1]
}

jsdoc {
    source = javascript.source.dev.js.files
    destinationDir = "src/main/resources/META-INF/web-resources/script/jsdoc"
}

/* CSS------------------------------------------------------------------------*/
css.source.dev.css.files.eachWithIndex { cssFile, idx ->
    tasks.add(name: "dominifyCss${idx}", type: com.eriwen.gradle.css.tasks.MinifyCssTask) {
        source = cssFile
        dest = "${cssFile.parent}/${cssFile.name.replace('.css', '.min.css')}"
        yuicompressor {
        	lineBreakPos = 100
    	}
    }
}
task individualMinifyCss(dependsOn: tasks.matching { Task task -> task.name.startsWith("dominifyCss")})

css.source.prod.css.files.eachWithIndex { cssFile, idx ->
    tasks.add(name: "doGzipCss${idx}", type: com.eriwen.gradle.css.tasks.GzipCssTask) {
        source = cssFile
        dest = "${cssFile.parent}/${cssFile.name}"
    }
}
task individualGzipCss(dependsOn: tasks.matching { Task task -> task.name.startsWith("doGzipCss")})

csslint {
    source = css.source.dev.css.files
    dest = "src/main/resources/META-INF/web-resources/css/csslint.out"
    csslint {
        format = 'text'
        warnings = ['box-model', 'ids']
        errors = []
    }
}